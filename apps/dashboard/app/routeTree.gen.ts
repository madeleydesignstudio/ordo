/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ProjectManagerImport } from './routes/project-manager'
import { Route as ContentManagerRouteImport } from './routes/content-manager/route'
import { Route as AuthRouteImport } from './routes/_auth/route'
import { Route as homeRouteImport } from './routes/(home)/route'
import { Route as ProjectManagerIndexImport } from './routes/project-manager/index'
import { Route as HealthManagerIndexImport } from './routes/health-manager/index'
import { Route as FinanceManagerIndexImport } from './routes/finance-manager/index'
import { Route as ContentManagerIndexImport } from './routes/content-manager/index'
import { Route as homeIndexImport } from './routes/(home)/index'
import { Route as ProjectManagerTasksImport } from './routes/project-manager/tasks'
import { Route as ProjectManagerRouterImport } from './routes/project-manager/router'
import { Route as ProjectManagerProjectsImport } from './routes/project-manager/projects'
import { Route as ProjectManagerNotesImport } from './routes/project-manager/notes'
import { Route as ProjectManagerDashboardImport } from './routes/project-manager/dashboard'
import { Route as ProjectManagerCanvasImport } from './routes/project-manager/canvas'
import { Route as ProjectManagerAnalyticsImport } from './routes/project-manager/analytics'
import { Route as HealthManagerSupplementTrackerImport } from './routes/health-manager/supplement-tracker'
import { Route as HealthManagerRouterImport } from './routes/health-manager/router'
import { Route as HealthManagerJournalImport } from './routes/health-manager/journal'
import { Route as HealthManagerFitnessTrackerImport } from './routes/health-manager/fitness-tracker'
import { Route as HealthManagerDashboardImport } from './routes/health-manager/dashboard'
import { Route as FinanceManagerTransactionsImport } from './routes/finance-manager/transactions'
import { Route as FinanceManagerRouterImport } from './routes/finance-manager/router'
import { Route as FinanceManagerReportsImport } from './routes/finance-manager/reports'
import { Route as FinanceManagerPortfolioImport } from './routes/finance-manager/portfolio'
import { Route as FinanceManagerNewsImport } from './routes/finance-manager/news'
import { Route as FinanceManagerDashboardImport } from './routes/finance-manager/dashboard'
import { Route as FinanceManagerBudgetingImport } from './routes/finance-manager/budgeting'
import { Route as ContentManagerReportsImport } from './routes/content-manager/reports'
import { Route as ContentManagerPeopleImport } from './routes/content-manager/people'
import { Route as ContentManagerInboxZeroImport } from './routes/content-manager/inbox-zero'
import { Route as ContentManagerInboxImport } from './routes/content-manager/inbox'
import { Route as ContentManagerEmailImport } from './routes/content-manager/email'
import { Route as ContentManagerDashboardImport } from './routes/content-manager/dashboard'
import { Route as ContentManagerCompanyImport } from './routes/content-manager/company'
import { Route as AuthSignupImport } from './routes/_auth/signup'
import { Route as AuthLoginImport } from './routes/_auth/login'
import { Route as homeSettingsImport } from './routes/(home)/settings'
import { Route as homeNotificationsImport } from './routes/(home)/notifications'
import { Route as homeNewsImport } from './routes/(home)/news'
import { Route as homeJournalImport } from './routes/(home)/journal'
import { Route as homeHomeImport } from './routes/(home)/home'
import { Route as homeBusinessImport } from './routes/(home)/business'
import { Route as homeBookmarksImport } from './routes/(home)/bookmarks'

// Create/Update Routes

const ProjectManagerRoute = ProjectManagerImport.update({
  id: '/project-manager',
  path: '/project-manager',
  getParentRoute: () => rootRoute,
} as any)

const ContentManagerRouteRoute = ContentManagerRouteImport.update({
  id: '/content-manager',
  path: '/content-manager',
  getParentRoute: () => rootRoute,
} as any)

const AuthRouteRoute = AuthRouteImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const homeRouteRoute = homeRouteImport.update({
  id: '/(home)',
  getParentRoute: () => rootRoute,
} as any)

const ProjectManagerIndexRoute = ProjectManagerIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ProjectManagerRoute,
} as any)

const HealthManagerIndexRoute = HealthManagerIndexImport.update({
  id: '/health-manager/',
  path: '/health-manager/',
  getParentRoute: () => rootRoute,
} as any)

const FinanceManagerIndexRoute = FinanceManagerIndexImport.update({
  id: '/finance-manager/',
  path: '/finance-manager/',
  getParentRoute: () => rootRoute,
} as any)

const ContentManagerIndexRoute = ContentManagerIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ContentManagerRouteRoute,
} as any)

const homeIndexRoute = homeIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => homeRouteRoute,
} as any)

const ProjectManagerTasksRoute = ProjectManagerTasksImport.update({
  id: '/tasks',
  path: '/tasks',
  getParentRoute: () => ProjectManagerRoute,
} as any)

const ProjectManagerRouterRoute = ProjectManagerRouterImport.update({
  id: '/router',
  path: '/router',
  getParentRoute: () => ProjectManagerRoute,
} as any)

const ProjectManagerProjectsRoute = ProjectManagerProjectsImport.update({
  id: '/projects',
  path: '/projects',
  getParentRoute: () => ProjectManagerRoute,
} as any)

const ProjectManagerNotesRoute = ProjectManagerNotesImport.update({
  id: '/notes',
  path: '/notes',
  getParentRoute: () => ProjectManagerRoute,
} as any)

const ProjectManagerDashboardRoute = ProjectManagerDashboardImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => ProjectManagerRoute,
} as any)

const ProjectManagerCanvasRoute = ProjectManagerCanvasImport.update({
  id: '/canvas',
  path: '/canvas',
  getParentRoute: () => ProjectManagerRoute,
} as any)

const ProjectManagerAnalyticsRoute = ProjectManagerAnalyticsImport.update({
  id: '/analytics',
  path: '/analytics',
  getParentRoute: () => ProjectManagerRoute,
} as any)

const HealthManagerSupplementTrackerRoute =
  HealthManagerSupplementTrackerImport.update({
    id: '/health-manager/supplement-tracker',
    path: '/health-manager/supplement-tracker',
    getParentRoute: () => rootRoute,
  } as any)

const HealthManagerRouterRoute = HealthManagerRouterImport.update({
  id: '/health-manager/router',
  path: '/health-manager/router',
  getParentRoute: () => rootRoute,
} as any)

const HealthManagerJournalRoute = HealthManagerJournalImport.update({
  id: '/health-manager/journal',
  path: '/health-manager/journal',
  getParentRoute: () => rootRoute,
} as any)

const HealthManagerFitnessTrackerRoute =
  HealthManagerFitnessTrackerImport.update({
    id: '/health-manager/fitness-tracker',
    path: '/health-manager/fitness-tracker',
    getParentRoute: () => rootRoute,
  } as any)

const HealthManagerDashboardRoute = HealthManagerDashboardImport.update({
  id: '/health-manager/dashboard',
  path: '/health-manager/dashboard',
  getParentRoute: () => rootRoute,
} as any)

const FinanceManagerTransactionsRoute = FinanceManagerTransactionsImport.update(
  {
    id: '/finance-manager/transactions',
    path: '/finance-manager/transactions',
    getParentRoute: () => rootRoute,
  } as any,
)

const FinanceManagerRouterRoute = FinanceManagerRouterImport.update({
  id: '/finance-manager/router',
  path: '/finance-manager/router',
  getParentRoute: () => rootRoute,
} as any)

const FinanceManagerReportsRoute = FinanceManagerReportsImport.update({
  id: '/finance-manager/reports',
  path: '/finance-manager/reports',
  getParentRoute: () => rootRoute,
} as any)

const FinanceManagerPortfolioRoute = FinanceManagerPortfolioImport.update({
  id: '/finance-manager/portfolio',
  path: '/finance-manager/portfolio',
  getParentRoute: () => rootRoute,
} as any)

const FinanceManagerNewsRoute = FinanceManagerNewsImport.update({
  id: '/finance-manager/news',
  path: '/finance-manager/news',
  getParentRoute: () => rootRoute,
} as any)

const FinanceManagerDashboardRoute = FinanceManagerDashboardImport.update({
  id: '/finance-manager/dashboard',
  path: '/finance-manager/dashboard',
  getParentRoute: () => rootRoute,
} as any)

const FinanceManagerBudgetingRoute = FinanceManagerBudgetingImport.update({
  id: '/finance-manager/budgeting',
  path: '/finance-manager/budgeting',
  getParentRoute: () => rootRoute,
} as any)

const ContentManagerReportsRoute = ContentManagerReportsImport.update({
  id: '/reports',
  path: '/reports',
  getParentRoute: () => ContentManagerRouteRoute,
} as any)

const ContentManagerPeopleRoute = ContentManagerPeopleImport.update({
  id: '/people',
  path: '/people',
  getParentRoute: () => ContentManagerRouteRoute,
} as any)

const ContentManagerInboxZeroRoute = ContentManagerInboxZeroImport.update({
  id: '/inbox-zero',
  path: '/inbox-zero',
  getParentRoute: () => ContentManagerRouteRoute,
} as any)

const ContentManagerInboxRoute = ContentManagerInboxImport.update({
  id: '/inbox',
  path: '/inbox',
  getParentRoute: () => ContentManagerRouteRoute,
} as any)

const ContentManagerEmailRoute = ContentManagerEmailImport.update({
  id: '/email',
  path: '/email',
  getParentRoute: () => ContentManagerRouteRoute,
} as any)

const ContentManagerDashboardRoute = ContentManagerDashboardImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => ContentManagerRouteRoute,
} as any)

const ContentManagerCompanyRoute = ContentManagerCompanyImport.update({
  id: '/company',
  path: '/company',
  getParentRoute: () => ContentManagerRouteRoute,
} as any)

const AuthSignupRoute = AuthSignupImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => AuthRouteRoute,
} as any)

const AuthLoginRoute = AuthLoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => AuthRouteRoute,
} as any)

const homeSettingsRoute = homeSettingsImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => homeRouteRoute,
} as any)

const homeNotificationsRoute = homeNotificationsImport.update({
  id: '/notifications',
  path: '/notifications',
  getParentRoute: () => homeRouteRoute,
} as any)

const homeNewsRoute = homeNewsImport.update({
  id: '/news',
  path: '/news',
  getParentRoute: () => homeRouteRoute,
} as any)

const homeJournalRoute = homeJournalImport.update({
  id: '/journal',
  path: '/journal',
  getParentRoute: () => homeRouteRoute,
} as any)

const homeHomeRoute = homeHomeImport.update({
  id: '/home',
  path: '/home',
  getParentRoute: () => homeRouteRoute,
} as any)

const homeBusinessRoute = homeBusinessImport.update({
  id: '/business',
  path: '/business',
  getParentRoute: () => homeRouteRoute,
} as any)

const homeBookmarksRoute = homeBookmarksImport.update({
  id: '/bookmarks',
  path: '/bookmarks',
  getParentRoute: () => homeRouteRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/(home)': {
      id: '/(home)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof homeRouteImport
      parentRoute: typeof rootRoute
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRoute
    }
    '/content-manager': {
      id: '/content-manager'
      path: '/content-manager'
      fullPath: '/content-manager'
      preLoaderRoute: typeof ContentManagerRouteImport
      parentRoute: typeof rootRoute
    }
    '/project-manager': {
      id: '/project-manager'
      path: '/project-manager'
      fullPath: '/project-manager'
      preLoaderRoute: typeof ProjectManagerImport
      parentRoute: typeof rootRoute
    }
    '/(home)/bookmarks': {
      id: '/(home)/bookmarks'
      path: '/bookmarks'
      fullPath: '/bookmarks'
      preLoaderRoute: typeof homeBookmarksImport
      parentRoute: typeof homeRouteImport
    }
    '/(home)/business': {
      id: '/(home)/business'
      path: '/business'
      fullPath: '/business'
      preLoaderRoute: typeof homeBusinessImport
      parentRoute: typeof homeRouteImport
    }
    '/(home)/home': {
      id: '/(home)/home'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof homeHomeImport
      parentRoute: typeof homeRouteImport
    }
    '/(home)/journal': {
      id: '/(home)/journal'
      path: '/journal'
      fullPath: '/journal'
      preLoaderRoute: typeof homeJournalImport
      parentRoute: typeof homeRouteImport
    }
    '/(home)/news': {
      id: '/(home)/news'
      path: '/news'
      fullPath: '/news'
      preLoaderRoute: typeof homeNewsImport
      parentRoute: typeof homeRouteImport
    }
    '/(home)/notifications': {
      id: '/(home)/notifications'
      path: '/notifications'
      fullPath: '/notifications'
      preLoaderRoute: typeof homeNotificationsImport
      parentRoute: typeof homeRouteImport
    }
    '/(home)/settings': {
      id: '/(home)/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof homeSettingsImport
      parentRoute: typeof homeRouteImport
    }
    '/_auth/login': {
      id: '/_auth/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof AuthLoginImport
      parentRoute: typeof AuthRouteImport
    }
    '/_auth/signup': {
      id: '/_auth/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof AuthSignupImport
      parentRoute: typeof AuthRouteImport
    }
    '/content-manager/company': {
      id: '/content-manager/company'
      path: '/company'
      fullPath: '/content-manager/company'
      preLoaderRoute: typeof ContentManagerCompanyImport
      parentRoute: typeof ContentManagerRouteImport
    }
    '/content-manager/dashboard': {
      id: '/content-manager/dashboard'
      path: '/dashboard'
      fullPath: '/content-manager/dashboard'
      preLoaderRoute: typeof ContentManagerDashboardImport
      parentRoute: typeof ContentManagerRouteImport
    }
    '/content-manager/email': {
      id: '/content-manager/email'
      path: '/email'
      fullPath: '/content-manager/email'
      preLoaderRoute: typeof ContentManagerEmailImport
      parentRoute: typeof ContentManagerRouteImport
    }
    '/content-manager/inbox': {
      id: '/content-manager/inbox'
      path: '/inbox'
      fullPath: '/content-manager/inbox'
      preLoaderRoute: typeof ContentManagerInboxImport
      parentRoute: typeof ContentManagerRouteImport
    }
    '/content-manager/inbox-zero': {
      id: '/content-manager/inbox-zero'
      path: '/inbox-zero'
      fullPath: '/content-manager/inbox-zero'
      preLoaderRoute: typeof ContentManagerInboxZeroImport
      parentRoute: typeof ContentManagerRouteImport
    }
    '/content-manager/people': {
      id: '/content-manager/people'
      path: '/people'
      fullPath: '/content-manager/people'
      preLoaderRoute: typeof ContentManagerPeopleImport
      parentRoute: typeof ContentManagerRouteImport
    }
    '/content-manager/reports': {
      id: '/content-manager/reports'
      path: '/reports'
      fullPath: '/content-manager/reports'
      preLoaderRoute: typeof ContentManagerReportsImport
      parentRoute: typeof ContentManagerRouteImport
    }
    '/finance-manager/budgeting': {
      id: '/finance-manager/budgeting'
      path: '/finance-manager/budgeting'
      fullPath: '/finance-manager/budgeting'
      preLoaderRoute: typeof FinanceManagerBudgetingImport
      parentRoute: typeof rootRoute
    }
    '/finance-manager/dashboard': {
      id: '/finance-manager/dashboard'
      path: '/finance-manager/dashboard'
      fullPath: '/finance-manager/dashboard'
      preLoaderRoute: typeof FinanceManagerDashboardImport
      parentRoute: typeof rootRoute
    }
    '/finance-manager/news': {
      id: '/finance-manager/news'
      path: '/finance-manager/news'
      fullPath: '/finance-manager/news'
      preLoaderRoute: typeof FinanceManagerNewsImport
      parentRoute: typeof rootRoute
    }
    '/finance-manager/portfolio': {
      id: '/finance-manager/portfolio'
      path: '/finance-manager/portfolio'
      fullPath: '/finance-manager/portfolio'
      preLoaderRoute: typeof FinanceManagerPortfolioImport
      parentRoute: typeof rootRoute
    }
    '/finance-manager/reports': {
      id: '/finance-manager/reports'
      path: '/finance-manager/reports'
      fullPath: '/finance-manager/reports'
      preLoaderRoute: typeof FinanceManagerReportsImport
      parentRoute: typeof rootRoute
    }
    '/finance-manager/router': {
      id: '/finance-manager/router'
      path: '/finance-manager/router'
      fullPath: '/finance-manager/router'
      preLoaderRoute: typeof FinanceManagerRouterImport
      parentRoute: typeof rootRoute
    }
    '/finance-manager/transactions': {
      id: '/finance-manager/transactions'
      path: '/finance-manager/transactions'
      fullPath: '/finance-manager/transactions'
      preLoaderRoute: typeof FinanceManagerTransactionsImport
      parentRoute: typeof rootRoute
    }
    '/health-manager/dashboard': {
      id: '/health-manager/dashboard'
      path: '/health-manager/dashboard'
      fullPath: '/health-manager/dashboard'
      preLoaderRoute: typeof HealthManagerDashboardImport
      parentRoute: typeof rootRoute
    }
    '/health-manager/fitness-tracker': {
      id: '/health-manager/fitness-tracker'
      path: '/health-manager/fitness-tracker'
      fullPath: '/health-manager/fitness-tracker'
      preLoaderRoute: typeof HealthManagerFitnessTrackerImport
      parentRoute: typeof rootRoute
    }
    '/health-manager/journal': {
      id: '/health-manager/journal'
      path: '/health-manager/journal'
      fullPath: '/health-manager/journal'
      preLoaderRoute: typeof HealthManagerJournalImport
      parentRoute: typeof rootRoute
    }
    '/health-manager/router': {
      id: '/health-manager/router'
      path: '/health-manager/router'
      fullPath: '/health-manager/router'
      preLoaderRoute: typeof HealthManagerRouterImport
      parentRoute: typeof rootRoute
    }
    '/health-manager/supplement-tracker': {
      id: '/health-manager/supplement-tracker'
      path: '/health-manager/supplement-tracker'
      fullPath: '/health-manager/supplement-tracker'
      preLoaderRoute: typeof HealthManagerSupplementTrackerImport
      parentRoute: typeof rootRoute
    }
    '/project-manager/analytics': {
      id: '/project-manager/analytics'
      path: '/analytics'
      fullPath: '/project-manager/analytics'
      preLoaderRoute: typeof ProjectManagerAnalyticsImport
      parentRoute: typeof ProjectManagerImport
    }
    '/project-manager/canvas': {
      id: '/project-manager/canvas'
      path: '/canvas'
      fullPath: '/project-manager/canvas'
      preLoaderRoute: typeof ProjectManagerCanvasImport
      parentRoute: typeof ProjectManagerImport
    }
    '/project-manager/dashboard': {
      id: '/project-manager/dashboard'
      path: '/dashboard'
      fullPath: '/project-manager/dashboard'
      preLoaderRoute: typeof ProjectManagerDashboardImport
      parentRoute: typeof ProjectManagerImport
    }
    '/project-manager/notes': {
      id: '/project-manager/notes'
      path: '/notes'
      fullPath: '/project-manager/notes'
      preLoaderRoute: typeof ProjectManagerNotesImport
      parentRoute: typeof ProjectManagerImport
    }
    '/project-manager/projects': {
      id: '/project-manager/projects'
      path: '/projects'
      fullPath: '/project-manager/projects'
      preLoaderRoute: typeof ProjectManagerProjectsImport
      parentRoute: typeof ProjectManagerImport
    }
    '/project-manager/router': {
      id: '/project-manager/router'
      path: '/router'
      fullPath: '/project-manager/router'
      preLoaderRoute: typeof ProjectManagerRouterImport
      parentRoute: typeof ProjectManagerImport
    }
    '/project-manager/tasks': {
      id: '/project-manager/tasks'
      path: '/tasks'
      fullPath: '/project-manager/tasks'
      preLoaderRoute: typeof ProjectManagerTasksImport
      parentRoute: typeof ProjectManagerImport
    }
    '/(home)/': {
      id: '/(home)/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof homeIndexImport
      parentRoute: typeof homeRouteImport
    }
    '/content-manager/': {
      id: '/content-manager/'
      path: '/'
      fullPath: '/content-manager/'
      preLoaderRoute: typeof ContentManagerIndexImport
      parentRoute: typeof ContentManagerRouteImport
    }
    '/finance-manager/': {
      id: '/finance-manager/'
      path: '/finance-manager'
      fullPath: '/finance-manager'
      preLoaderRoute: typeof FinanceManagerIndexImport
      parentRoute: typeof rootRoute
    }
    '/health-manager/': {
      id: '/health-manager/'
      path: '/health-manager'
      fullPath: '/health-manager'
      preLoaderRoute: typeof HealthManagerIndexImport
      parentRoute: typeof rootRoute
    }
    '/project-manager/': {
      id: '/project-manager/'
      path: '/'
      fullPath: '/project-manager/'
      preLoaderRoute: typeof ProjectManagerIndexImport
      parentRoute: typeof ProjectManagerImport
    }
  }
}

// Create and export the route tree

interface homeRouteRouteChildren {
  homeBookmarksRoute: typeof homeBookmarksRoute
  homeBusinessRoute: typeof homeBusinessRoute
  homeHomeRoute: typeof homeHomeRoute
  homeJournalRoute: typeof homeJournalRoute
  homeNewsRoute: typeof homeNewsRoute
  homeNotificationsRoute: typeof homeNotificationsRoute
  homeSettingsRoute: typeof homeSettingsRoute
  homeIndexRoute: typeof homeIndexRoute
}

const homeRouteRouteChildren: homeRouteRouteChildren = {
  homeBookmarksRoute: homeBookmarksRoute,
  homeBusinessRoute: homeBusinessRoute,
  homeHomeRoute: homeHomeRoute,
  homeJournalRoute: homeJournalRoute,
  homeNewsRoute: homeNewsRoute,
  homeNotificationsRoute: homeNotificationsRoute,
  homeSettingsRoute: homeSettingsRoute,
  homeIndexRoute: homeIndexRoute,
}

const homeRouteRouteWithChildren = homeRouteRoute._addFileChildren(
  homeRouteRouteChildren,
)

interface AuthRouteRouteChildren {
  AuthLoginRoute: typeof AuthLoginRoute
  AuthSignupRoute: typeof AuthSignupRoute
}

const AuthRouteRouteChildren: AuthRouteRouteChildren = {
  AuthLoginRoute: AuthLoginRoute,
  AuthSignupRoute: AuthSignupRoute,
}

const AuthRouteRouteWithChildren = AuthRouteRoute._addFileChildren(
  AuthRouteRouteChildren,
)

interface ContentManagerRouteRouteChildren {
  ContentManagerCompanyRoute: typeof ContentManagerCompanyRoute
  ContentManagerDashboardRoute: typeof ContentManagerDashboardRoute
  ContentManagerEmailRoute: typeof ContentManagerEmailRoute
  ContentManagerInboxRoute: typeof ContentManagerInboxRoute
  ContentManagerInboxZeroRoute: typeof ContentManagerInboxZeroRoute
  ContentManagerPeopleRoute: typeof ContentManagerPeopleRoute
  ContentManagerReportsRoute: typeof ContentManagerReportsRoute
  ContentManagerIndexRoute: typeof ContentManagerIndexRoute
}

const ContentManagerRouteRouteChildren: ContentManagerRouteRouteChildren = {
  ContentManagerCompanyRoute: ContentManagerCompanyRoute,
  ContentManagerDashboardRoute: ContentManagerDashboardRoute,
  ContentManagerEmailRoute: ContentManagerEmailRoute,
  ContentManagerInboxRoute: ContentManagerInboxRoute,
  ContentManagerInboxZeroRoute: ContentManagerInboxZeroRoute,
  ContentManagerPeopleRoute: ContentManagerPeopleRoute,
  ContentManagerReportsRoute: ContentManagerReportsRoute,
  ContentManagerIndexRoute: ContentManagerIndexRoute,
}

const ContentManagerRouteRouteWithChildren =
  ContentManagerRouteRoute._addFileChildren(ContentManagerRouteRouteChildren)

interface ProjectManagerRouteChildren {
  ProjectManagerAnalyticsRoute: typeof ProjectManagerAnalyticsRoute
  ProjectManagerCanvasRoute: typeof ProjectManagerCanvasRoute
  ProjectManagerDashboardRoute: typeof ProjectManagerDashboardRoute
  ProjectManagerNotesRoute: typeof ProjectManagerNotesRoute
  ProjectManagerProjectsRoute: typeof ProjectManagerProjectsRoute
  ProjectManagerRouterRoute: typeof ProjectManagerRouterRoute
  ProjectManagerTasksRoute: typeof ProjectManagerTasksRoute
  ProjectManagerIndexRoute: typeof ProjectManagerIndexRoute
}

const ProjectManagerRouteChildren: ProjectManagerRouteChildren = {
  ProjectManagerAnalyticsRoute: ProjectManagerAnalyticsRoute,
  ProjectManagerCanvasRoute: ProjectManagerCanvasRoute,
  ProjectManagerDashboardRoute: ProjectManagerDashboardRoute,
  ProjectManagerNotesRoute: ProjectManagerNotesRoute,
  ProjectManagerProjectsRoute: ProjectManagerProjectsRoute,
  ProjectManagerRouterRoute: ProjectManagerRouterRoute,
  ProjectManagerTasksRoute: ProjectManagerTasksRoute,
  ProjectManagerIndexRoute: ProjectManagerIndexRoute,
}

const ProjectManagerRouteWithChildren = ProjectManagerRoute._addFileChildren(
  ProjectManagerRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof homeIndexRoute
  '': typeof AuthRouteRouteWithChildren
  '/content-manager': typeof ContentManagerRouteRouteWithChildren
  '/project-manager': typeof ProjectManagerRouteWithChildren
  '/bookmarks': typeof homeBookmarksRoute
  '/business': typeof homeBusinessRoute
  '/home': typeof homeHomeRoute
  '/journal': typeof homeJournalRoute
  '/news': typeof homeNewsRoute
  '/notifications': typeof homeNotificationsRoute
  '/settings': typeof homeSettingsRoute
  '/login': typeof AuthLoginRoute
  '/signup': typeof AuthSignupRoute
  '/content-manager/company': typeof ContentManagerCompanyRoute
  '/content-manager/dashboard': typeof ContentManagerDashboardRoute
  '/content-manager/email': typeof ContentManagerEmailRoute
  '/content-manager/inbox': typeof ContentManagerInboxRoute
  '/content-manager/inbox-zero': typeof ContentManagerInboxZeroRoute
  '/content-manager/people': typeof ContentManagerPeopleRoute
  '/content-manager/reports': typeof ContentManagerReportsRoute
  '/finance-manager/budgeting': typeof FinanceManagerBudgetingRoute
  '/finance-manager/dashboard': typeof FinanceManagerDashboardRoute
  '/finance-manager/news': typeof FinanceManagerNewsRoute
  '/finance-manager/portfolio': typeof FinanceManagerPortfolioRoute
  '/finance-manager/reports': typeof FinanceManagerReportsRoute
  '/finance-manager/router': typeof FinanceManagerRouterRoute
  '/finance-manager/transactions': typeof FinanceManagerTransactionsRoute
  '/health-manager/dashboard': typeof HealthManagerDashboardRoute
  '/health-manager/fitness-tracker': typeof HealthManagerFitnessTrackerRoute
  '/health-manager/journal': typeof HealthManagerJournalRoute
  '/health-manager/router': typeof HealthManagerRouterRoute
  '/health-manager/supplement-tracker': typeof HealthManagerSupplementTrackerRoute
  '/project-manager/analytics': typeof ProjectManagerAnalyticsRoute
  '/project-manager/canvas': typeof ProjectManagerCanvasRoute
  '/project-manager/dashboard': typeof ProjectManagerDashboardRoute
  '/project-manager/notes': typeof ProjectManagerNotesRoute
  '/project-manager/projects': typeof ProjectManagerProjectsRoute
  '/project-manager/router': typeof ProjectManagerRouterRoute
  '/project-manager/tasks': typeof ProjectManagerTasksRoute
  '/content-manager/': typeof ContentManagerIndexRoute
  '/finance-manager': typeof FinanceManagerIndexRoute
  '/health-manager': typeof HealthManagerIndexRoute
  '/project-manager/': typeof ProjectManagerIndexRoute
}

export interface FileRoutesByTo {
  '': typeof AuthRouteRouteWithChildren
  '/bookmarks': typeof homeBookmarksRoute
  '/business': typeof homeBusinessRoute
  '/home': typeof homeHomeRoute
  '/journal': typeof homeJournalRoute
  '/news': typeof homeNewsRoute
  '/notifications': typeof homeNotificationsRoute
  '/settings': typeof homeSettingsRoute
  '/login': typeof AuthLoginRoute
  '/signup': typeof AuthSignupRoute
  '/content-manager/company': typeof ContentManagerCompanyRoute
  '/content-manager/dashboard': typeof ContentManagerDashboardRoute
  '/content-manager/email': typeof ContentManagerEmailRoute
  '/content-manager/inbox': typeof ContentManagerInboxRoute
  '/content-manager/inbox-zero': typeof ContentManagerInboxZeroRoute
  '/content-manager/people': typeof ContentManagerPeopleRoute
  '/content-manager/reports': typeof ContentManagerReportsRoute
  '/finance-manager/budgeting': typeof FinanceManagerBudgetingRoute
  '/finance-manager/dashboard': typeof FinanceManagerDashboardRoute
  '/finance-manager/news': typeof FinanceManagerNewsRoute
  '/finance-manager/portfolio': typeof FinanceManagerPortfolioRoute
  '/finance-manager/reports': typeof FinanceManagerReportsRoute
  '/finance-manager/router': typeof FinanceManagerRouterRoute
  '/finance-manager/transactions': typeof FinanceManagerTransactionsRoute
  '/health-manager/dashboard': typeof HealthManagerDashboardRoute
  '/health-manager/fitness-tracker': typeof HealthManagerFitnessTrackerRoute
  '/health-manager/journal': typeof HealthManagerJournalRoute
  '/health-manager/router': typeof HealthManagerRouterRoute
  '/health-manager/supplement-tracker': typeof HealthManagerSupplementTrackerRoute
  '/project-manager/analytics': typeof ProjectManagerAnalyticsRoute
  '/project-manager/canvas': typeof ProjectManagerCanvasRoute
  '/project-manager/dashboard': typeof ProjectManagerDashboardRoute
  '/project-manager/notes': typeof ProjectManagerNotesRoute
  '/project-manager/projects': typeof ProjectManagerProjectsRoute
  '/project-manager/router': typeof ProjectManagerRouterRoute
  '/project-manager/tasks': typeof ProjectManagerTasksRoute
  '/': typeof homeIndexRoute
  '/content-manager': typeof ContentManagerIndexRoute
  '/finance-manager': typeof FinanceManagerIndexRoute
  '/health-manager': typeof HealthManagerIndexRoute
  '/project-manager': typeof ProjectManagerIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/(home)': typeof homeRouteRouteWithChildren
  '/_auth': typeof AuthRouteRouteWithChildren
  '/content-manager': typeof ContentManagerRouteRouteWithChildren
  '/project-manager': typeof ProjectManagerRouteWithChildren
  '/(home)/bookmarks': typeof homeBookmarksRoute
  '/(home)/business': typeof homeBusinessRoute
  '/(home)/home': typeof homeHomeRoute
  '/(home)/journal': typeof homeJournalRoute
  '/(home)/news': typeof homeNewsRoute
  '/(home)/notifications': typeof homeNotificationsRoute
  '/(home)/settings': typeof homeSettingsRoute
  '/_auth/login': typeof AuthLoginRoute
  '/_auth/signup': typeof AuthSignupRoute
  '/content-manager/company': typeof ContentManagerCompanyRoute
  '/content-manager/dashboard': typeof ContentManagerDashboardRoute
  '/content-manager/email': typeof ContentManagerEmailRoute
  '/content-manager/inbox': typeof ContentManagerInboxRoute
  '/content-manager/inbox-zero': typeof ContentManagerInboxZeroRoute
  '/content-manager/people': typeof ContentManagerPeopleRoute
  '/content-manager/reports': typeof ContentManagerReportsRoute
  '/finance-manager/budgeting': typeof FinanceManagerBudgetingRoute
  '/finance-manager/dashboard': typeof FinanceManagerDashboardRoute
  '/finance-manager/news': typeof FinanceManagerNewsRoute
  '/finance-manager/portfolio': typeof FinanceManagerPortfolioRoute
  '/finance-manager/reports': typeof FinanceManagerReportsRoute
  '/finance-manager/router': typeof FinanceManagerRouterRoute
  '/finance-manager/transactions': typeof FinanceManagerTransactionsRoute
  '/health-manager/dashboard': typeof HealthManagerDashboardRoute
  '/health-manager/fitness-tracker': typeof HealthManagerFitnessTrackerRoute
  '/health-manager/journal': typeof HealthManagerJournalRoute
  '/health-manager/router': typeof HealthManagerRouterRoute
  '/health-manager/supplement-tracker': typeof HealthManagerSupplementTrackerRoute
  '/project-manager/analytics': typeof ProjectManagerAnalyticsRoute
  '/project-manager/canvas': typeof ProjectManagerCanvasRoute
  '/project-manager/dashboard': typeof ProjectManagerDashboardRoute
  '/project-manager/notes': typeof ProjectManagerNotesRoute
  '/project-manager/projects': typeof ProjectManagerProjectsRoute
  '/project-manager/router': typeof ProjectManagerRouterRoute
  '/project-manager/tasks': typeof ProjectManagerTasksRoute
  '/(home)/': typeof homeIndexRoute
  '/content-manager/': typeof ContentManagerIndexRoute
  '/finance-manager/': typeof FinanceManagerIndexRoute
  '/health-manager/': typeof HealthManagerIndexRoute
  '/project-manager/': typeof ProjectManagerIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/content-manager'
    | '/project-manager'
    | '/bookmarks'
    | '/business'
    | '/home'
    | '/journal'
    | '/news'
    | '/notifications'
    | '/settings'
    | '/login'
    | '/signup'
    | '/content-manager/company'
    | '/content-manager/dashboard'
    | '/content-manager/email'
    | '/content-manager/inbox'
    | '/content-manager/inbox-zero'
    | '/content-manager/people'
    | '/content-manager/reports'
    | '/finance-manager/budgeting'
    | '/finance-manager/dashboard'
    | '/finance-manager/news'
    | '/finance-manager/portfolio'
    | '/finance-manager/reports'
    | '/finance-manager/router'
    | '/finance-manager/transactions'
    | '/health-manager/dashboard'
    | '/health-manager/fitness-tracker'
    | '/health-manager/journal'
    | '/health-manager/router'
    | '/health-manager/supplement-tracker'
    | '/project-manager/analytics'
    | '/project-manager/canvas'
    | '/project-manager/dashboard'
    | '/project-manager/notes'
    | '/project-manager/projects'
    | '/project-manager/router'
    | '/project-manager/tasks'
    | '/content-manager/'
    | '/finance-manager'
    | '/health-manager'
    | '/project-manager/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | ''
    | '/bookmarks'
    | '/business'
    | '/home'
    | '/journal'
    | '/news'
    | '/notifications'
    | '/settings'
    | '/login'
    | '/signup'
    | '/content-manager/company'
    | '/content-manager/dashboard'
    | '/content-manager/email'
    | '/content-manager/inbox'
    | '/content-manager/inbox-zero'
    | '/content-manager/people'
    | '/content-manager/reports'
    | '/finance-manager/budgeting'
    | '/finance-manager/dashboard'
    | '/finance-manager/news'
    | '/finance-manager/portfolio'
    | '/finance-manager/reports'
    | '/finance-manager/router'
    | '/finance-manager/transactions'
    | '/health-manager/dashboard'
    | '/health-manager/fitness-tracker'
    | '/health-manager/journal'
    | '/health-manager/router'
    | '/health-manager/supplement-tracker'
    | '/project-manager/analytics'
    | '/project-manager/canvas'
    | '/project-manager/dashboard'
    | '/project-manager/notes'
    | '/project-manager/projects'
    | '/project-manager/router'
    | '/project-manager/tasks'
    | '/'
    | '/content-manager'
    | '/finance-manager'
    | '/health-manager'
    | '/project-manager'
  id:
    | '__root__'
    | '/(home)'
    | '/_auth'
    | '/content-manager'
    | '/project-manager'
    | '/(home)/bookmarks'
    | '/(home)/business'
    | '/(home)/home'
    | '/(home)/journal'
    | '/(home)/news'
    | '/(home)/notifications'
    | '/(home)/settings'
    | '/_auth/login'
    | '/_auth/signup'
    | '/content-manager/company'
    | '/content-manager/dashboard'
    | '/content-manager/email'
    | '/content-manager/inbox'
    | '/content-manager/inbox-zero'
    | '/content-manager/people'
    | '/content-manager/reports'
    | '/finance-manager/budgeting'
    | '/finance-manager/dashboard'
    | '/finance-manager/news'
    | '/finance-manager/portfolio'
    | '/finance-manager/reports'
    | '/finance-manager/router'
    | '/finance-manager/transactions'
    | '/health-manager/dashboard'
    | '/health-manager/fitness-tracker'
    | '/health-manager/journal'
    | '/health-manager/router'
    | '/health-manager/supplement-tracker'
    | '/project-manager/analytics'
    | '/project-manager/canvas'
    | '/project-manager/dashboard'
    | '/project-manager/notes'
    | '/project-manager/projects'
    | '/project-manager/router'
    | '/project-manager/tasks'
    | '/(home)/'
    | '/content-manager/'
    | '/finance-manager/'
    | '/health-manager/'
    | '/project-manager/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  homeRouteRoute: typeof homeRouteRouteWithChildren
  AuthRouteRoute: typeof AuthRouteRouteWithChildren
  ContentManagerRouteRoute: typeof ContentManagerRouteRouteWithChildren
  ProjectManagerRoute: typeof ProjectManagerRouteWithChildren
  FinanceManagerBudgetingRoute: typeof FinanceManagerBudgetingRoute
  FinanceManagerDashboardRoute: typeof FinanceManagerDashboardRoute
  FinanceManagerNewsRoute: typeof FinanceManagerNewsRoute
  FinanceManagerPortfolioRoute: typeof FinanceManagerPortfolioRoute
  FinanceManagerReportsRoute: typeof FinanceManagerReportsRoute
  FinanceManagerRouterRoute: typeof FinanceManagerRouterRoute
  FinanceManagerTransactionsRoute: typeof FinanceManagerTransactionsRoute
  HealthManagerDashboardRoute: typeof HealthManagerDashboardRoute
  HealthManagerFitnessTrackerRoute: typeof HealthManagerFitnessTrackerRoute
  HealthManagerJournalRoute: typeof HealthManagerJournalRoute
  HealthManagerRouterRoute: typeof HealthManagerRouterRoute
  HealthManagerSupplementTrackerRoute: typeof HealthManagerSupplementTrackerRoute
  FinanceManagerIndexRoute: typeof FinanceManagerIndexRoute
  HealthManagerIndexRoute: typeof HealthManagerIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  homeRouteRoute: homeRouteRouteWithChildren,
  AuthRouteRoute: AuthRouteRouteWithChildren,
  ContentManagerRouteRoute: ContentManagerRouteRouteWithChildren,
  ProjectManagerRoute: ProjectManagerRouteWithChildren,
  FinanceManagerBudgetingRoute: FinanceManagerBudgetingRoute,
  FinanceManagerDashboardRoute: FinanceManagerDashboardRoute,
  FinanceManagerNewsRoute: FinanceManagerNewsRoute,
  FinanceManagerPortfolioRoute: FinanceManagerPortfolioRoute,
  FinanceManagerReportsRoute: FinanceManagerReportsRoute,
  FinanceManagerRouterRoute: FinanceManagerRouterRoute,
  FinanceManagerTransactionsRoute: FinanceManagerTransactionsRoute,
  HealthManagerDashboardRoute: HealthManagerDashboardRoute,
  HealthManagerFitnessTrackerRoute: HealthManagerFitnessTrackerRoute,
  HealthManagerJournalRoute: HealthManagerJournalRoute,
  HealthManagerRouterRoute: HealthManagerRouterRoute,
  HealthManagerSupplementTrackerRoute: HealthManagerSupplementTrackerRoute,
  FinanceManagerIndexRoute: FinanceManagerIndexRoute,
  HealthManagerIndexRoute: HealthManagerIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/(home)",
        "/_auth",
        "/content-manager",
        "/project-manager",
        "/finance-manager/budgeting",
        "/finance-manager/dashboard",
        "/finance-manager/news",
        "/finance-manager/portfolio",
        "/finance-manager/reports",
        "/finance-manager/router",
        "/finance-manager/transactions",
        "/health-manager/dashboard",
        "/health-manager/fitness-tracker",
        "/health-manager/journal",
        "/health-manager/router",
        "/health-manager/supplement-tracker",
        "/finance-manager/",
        "/health-manager/"
      ]
    },
    "/(home)": {
      "filePath": "(home)/route.tsx",
      "children": [
        "/(home)/bookmarks",
        "/(home)/business",
        "/(home)/home",
        "/(home)/journal",
        "/(home)/news",
        "/(home)/notifications",
        "/(home)/settings",
        "/(home)/"
      ]
    },
    "/_auth": {
      "filePath": "_auth/route.tsx",
      "children": [
        "/_auth/login",
        "/_auth/signup"
      ]
    },
    "/content-manager": {
      "filePath": "content-manager/route.tsx",
      "children": [
        "/content-manager/company",
        "/content-manager/dashboard",
        "/content-manager/email",
        "/content-manager/inbox",
        "/content-manager/inbox-zero",
        "/content-manager/people",
        "/content-manager/reports",
        "/content-manager/"
      ]
    },
    "/project-manager": {
      "filePath": "project-manager.tsx",
      "children": [
        "/project-manager/analytics",
        "/project-manager/canvas",
        "/project-manager/dashboard",
        "/project-manager/notes",
        "/project-manager/projects",
        "/project-manager/router",
        "/project-manager/tasks",
        "/project-manager/"
      ]
    },
    "/(home)/bookmarks": {
      "filePath": "(home)/bookmarks.tsx",
      "parent": "/(home)"
    },
    "/(home)/business": {
      "filePath": "(home)/business.tsx",
      "parent": "/(home)"
    },
    "/(home)/home": {
      "filePath": "(home)/home.tsx",
      "parent": "/(home)"
    },
    "/(home)/journal": {
      "filePath": "(home)/journal.tsx",
      "parent": "/(home)"
    },
    "/(home)/news": {
      "filePath": "(home)/news.tsx",
      "parent": "/(home)"
    },
    "/(home)/notifications": {
      "filePath": "(home)/notifications.tsx",
      "parent": "/(home)"
    },
    "/(home)/settings": {
      "filePath": "(home)/settings.tsx",
      "parent": "/(home)"
    },
    "/_auth/login": {
      "filePath": "_auth/login.tsx",
      "parent": "/_auth"
    },
    "/_auth/signup": {
      "filePath": "_auth/signup.tsx",
      "parent": "/_auth"
    },
    "/content-manager/company": {
      "filePath": "content-manager/company.tsx",
      "parent": "/content-manager"
    },
    "/content-manager/dashboard": {
      "filePath": "content-manager/dashboard.tsx",
      "parent": "/content-manager"
    },
    "/content-manager/email": {
      "filePath": "content-manager/email.tsx",
      "parent": "/content-manager"
    },
    "/content-manager/inbox": {
      "filePath": "content-manager/inbox.tsx",
      "parent": "/content-manager"
    },
    "/content-manager/inbox-zero": {
      "filePath": "content-manager/inbox-zero.tsx",
      "parent": "/content-manager"
    },
    "/content-manager/people": {
      "filePath": "content-manager/people.tsx",
      "parent": "/content-manager"
    },
    "/content-manager/reports": {
      "filePath": "content-manager/reports.tsx",
      "parent": "/content-manager"
    },
    "/finance-manager/budgeting": {
      "filePath": "finance-manager/budgeting.tsx"
    },
    "/finance-manager/dashboard": {
      "filePath": "finance-manager/dashboard.tsx"
    },
    "/finance-manager/news": {
      "filePath": "finance-manager/news.tsx"
    },
    "/finance-manager/portfolio": {
      "filePath": "finance-manager/portfolio.tsx"
    },
    "/finance-manager/reports": {
      "filePath": "finance-manager/reports.tsx"
    },
    "/finance-manager/router": {
      "filePath": "finance-manager/router.tsx"
    },
    "/finance-manager/transactions": {
      "filePath": "finance-manager/transactions.tsx"
    },
    "/health-manager/dashboard": {
      "filePath": "health-manager/dashboard.tsx"
    },
    "/health-manager/fitness-tracker": {
      "filePath": "health-manager/fitness-tracker.tsx"
    },
    "/health-manager/journal": {
      "filePath": "health-manager/journal.tsx"
    },
    "/health-manager/router": {
      "filePath": "health-manager/router.tsx"
    },
    "/health-manager/supplement-tracker": {
      "filePath": "health-manager/supplement-tracker.tsx"
    },
    "/project-manager/analytics": {
      "filePath": "project-manager/analytics.tsx",
      "parent": "/project-manager"
    },
    "/project-manager/canvas": {
      "filePath": "project-manager/canvas.tsx",
      "parent": "/project-manager"
    },
    "/project-manager/dashboard": {
      "filePath": "project-manager/dashboard.tsx",
      "parent": "/project-manager"
    },
    "/project-manager/notes": {
      "filePath": "project-manager/notes.tsx",
      "parent": "/project-manager"
    },
    "/project-manager/projects": {
      "filePath": "project-manager/projects.tsx",
      "parent": "/project-manager"
    },
    "/project-manager/router": {
      "filePath": "project-manager/router.tsx",
      "parent": "/project-manager"
    },
    "/project-manager/tasks": {
      "filePath": "project-manager/tasks.tsx",
      "parent": "/project-manager"
    },
    "/(home)/": {
      "filePath": "(home)/index.tsx",
      "parent": "/(home)"
    },
    "/content-manager/": {
      "filePath": "content-manager/index.tsx",
      "parent": "/content-manager"
    },
    "/finance-manager/": {
      "filePath": "finance-manager/index.tsx"
    },
    "/health-manager/": {
      "filePath": "health-manager/index.tsx"
    },
    "/project-manager/": {
      "filePath": "project-manager/index.tsx",
      "parent": "/project-manager"
    }
  }
}
ROUTE_MANIFEST_END */
