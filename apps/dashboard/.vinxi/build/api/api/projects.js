import{j as e,d as a,p as s}from"./assets/db-DlibAWFV.js";import{desc as n}from"drizzle-orm";import{a as c}from"./assets/index-OQn0RJ4I.js";import"drizzle-orm/neon-http";import"@neondatabase/serverless";import"dotenv";import"drizzle-orm/pg-core";import"node:async_hooks";import"h3";const y=c("/api/projects")({GET:async({request:o,params:t})=>{try{const r=await a.query.projects.findMany({with:{tasks:!0},orderBy:[n(s.createdAt)]});return e({projects:r})}catch(r){return console.error("Error fetching projects:",r),e({error:"Failed to fetch projects"},{status:500})}},POST:async({request:o})=>{try{const t=await o.json();if(!t.name)return e({error:"Project name is required"},{status:400});const r=await a.insert(s).values({name:t.name,description:t.description||null,status:t.status||"not_started",startDate:t.startDate?new Date(t.startDate):new Date,dueDate:t.dueDate?new Date(t.dueDate):null}).returning();return e({project:r[0]},{status:201})}catch(t){return console.error("Error creating project:",t),e({error:"Failed to create project"},{status:500})}}});export{y as APIRoute};
